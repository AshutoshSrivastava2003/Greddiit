{"ast":null,"code":"var _jsxFileName = \"/home/ashutosh/SEM4/dass-ass1/2021101056/frontend/src/SavedPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SavedPosts = props => {\n  _s();\n  var storedJson = JSON.parse(localStorage.getItem('userJSON'));\n  const userId = storedJson ? storedJson._id : null;\n\n  // const [subgreddiits, setSubgreddiits] = useState([]);\n  // const { name } = useParams();\n  const [text, setText] = useState(\"\");\n  // const [subgreddiitExists, setSubgreddiitExists] = useState(true);\n\n  // useEffect(() => {\n  // axios.get(`/api/Greddiit/Subgreddiit/${name}`)\n  //     .then((res) => {\n  //         setSubgreddiits(res.data);\n  //         setSubgreddiitExists(res.data.length > 0);\n  //     })\n  //     .catch((error) => {\n  //         console.error(error);\n  //         setSubgreddiitExists(false);\n  //     });\n  // }, [name]);\n  // const handleSubmit = (event) => {\n  //     event.preventDefault();\n\n  //     const post = {\n  //         text: text,\n  //         posted_by: userId,\n  //         posted_in: name,\n  //         upvotes: 0,\n  //         downvotes: 0\n  //     };\n  //     console.log(post)\n\n  //     axios.post('/api/Greddiit/Posts/add', post)\n  //         .then(res => {\n  //             // Handle the successful response\n  //             console.log(res.data);\n  //             alert('Post created!');\n  //             // Optionally redirect to another page\n  //             // window.location.href = '/dashboard';\n  //         })\n  // .catch(err => {\n  //     // Handle the error response\n  //     console.error(err);\n  //     alert('Post creation failed. Please try again.');\n  // });\n  // }\n  const DisplaySavedPosts = e => {\n    e.preventDefault();\n    var Array = [];\n    document.getElementById(\"posts\").innerHTML = \"\";\n    axios.get('/api/Greddiit/Users/getId/' + userId).then(res => {\n      // Handle the successful response\n      Array = res.data.saved;\n      console.log(Array.length);\n      console.log(Array);\n      for (let i = 0; i < Array.length; i++) {\n        axios.get('/api/Greddiit/Posts/getId/' + Array[i]).then(res2 => {\n          // console.log('/api/Greddiit/Posts/getId/' + Array[i])\n          console.log('hello');\n          console.log(res2.data);\n          const name = document.createElement(\"li\");\n          const break_l = document.createElement(\"hr\");\n          const myDiv = document.createElement(\"div\");\n          name.textContent = res2.data.text;\n          myDiv.appendChild(name);\n          myDiv.appendChild(break_l);\n          document.getElementById(\"posts\").appendChild(myDiv);\n          // alert('Upvoted!');\n        }).catch(err => {\n          console.error(err);\n          alert(\"Couldn't get post\");\n        });\n      }\n    }).catch(err => {\n      // Handle the error response\n      console.error(err);\n      alert('Post creation failed. Please try again.');\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n  function renderForm() {\n    const cnt = document.getElementById(\"createPost\");\n    if (cnt.style.display === \"none\") {\n      cnt.style.display = \"block\";\n    } else {\n      cnt.style.display = \"none\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Saved Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: DisplaySavedPosts,\n        children: \"Display Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SavedPosts, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = SavedPosts;\nvar _c;\n$RefreshReg$(_c, \"SavedPosts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","SavedPosts","props","storedJson","JSON","parse","localStorage","getItem","userId","_id","text","setText","DisplaySavedPosts","e","preventDefault","Array","document","getElementById","innerHTML","get","then","res","data","saved","console","log","length","i","res2","name","createElement","break_l","myDiv","textContent","appendChild","catch","err","error","alert","handleSubmit","event","renderForm","cnt","style","display"],"sources":["/home/ashutosh/SEM4/dass-ass1/2021101056/frontend/src/SavedPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\"\nexport const SavedPosts = (props) => {\n    var storedJson = JSON.parse(localStorage.getItem('userJSON'));\n    const userId = storedJson ? storedJson._id : null\n\n    // const [subgreddiits, setSubgreddiits] = useState([]);\n    // const { name } = useParams();\n    const [text, setText] = useState(\"\");\n    // const [subgreddiitExists, setSubgreddiitExists] = useState(true);\n\n    // useEffect(() => {\n        // axios.get(`/api/Greddiit/Subgreddiit/${name}`)\n        //     .then((res) => {\n        //         setSubgreddiits(res.data);\n        //         setSubgreddiitExists(res.data.length > 0);\n        //     })\n        //     .catch((error) => {\n        //         console.error(error);\n        //         setSubgreddiitExists(false);\n        //     });\n    // }, [name]);\n    // const handleSubmit = (event) => {\n    //     event.preventDefault();\n\n\n\n    //     const post = {\n    //         text: text,\n    //         posted_by: userId,\n    //         posted_in: name,\n    //         upvotes: 0,\n    //         downvotes: 0\n    //     };\n    //     console.log(post)\n\n    //     axios.post('/api/Greddiit/Posts/add', post)\n    //         .then(res => {\n    //             // Handle the successful response\n    //             console.log(res.data);\n    //             alert('Post created!');\n    //             // Optionally redirect to another page\n    //             // window.location.href = '/dashboard';\n    //         })\n            // .catch(err => {\n            //     // Handle the error response\n            //     console.error(err);\n            //     alert('Post creation failed. Please try again.');\n            // });\n    // }\n    const DisplaySavedPosts = (e) => {\n        e.preventDefault();\n        var Array = []\n        document.getElementById(\"posts\").innerHTML = \"\"\n\n        axios.get('/api/Greddiit/Users/getId/' + userId)\n            .then(res => {\n                // Handle the successful response\n                Array = res.data.saved\n                console.log(Array.length)\n                console.log(Array)\n                for (let i = 0; i < Array.length; i++) {\n                    axios.get('/api/Greddiit/Posts/getId/' + Array[i])\n                        .then(res2 => {\n                            // console.log('/api/Greddiit/Posts/getId/' + Array[i])\n                            console.log('hello')\n                            console.log(res2.data)\n                            const name = document.createElement(\"li\");\n\n                            const break_l = document.createElement(\"hr\");\n\n                            const myDiv = document.createElement(\"div\");\n\n                            name.textContent = res2.data.text;\n\n                            myDiv.appendChild(name);\n                            myDiv.appendChild(break_l);\n                            document.getElementById(\"posts\").appendChild(myDiv);\n                            // alert('Upvoted!');\n                            \n\n                        })\n                        .catch(err => {\n                            console.error(err);\n                            alert(\"Couldn't get post\");\n                        });\n\n                }\n            })\n            .catch(err => {\n                // Handle the error response\n                console.error(err);\n                alert('Post creation failed. Please try again.');\n            });\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    }\n    function renderForm() {\n        const cnt = document.getElementById(\"createPost\");\n        if (cnt.style.display === \"none\") {\n            cnt.style.display = \"block\";\n        } else {\n            cnt.style.display = \"none\";\n        }\n    }\n    return (\n        <>\n            <div>\n                <h1>Saved Posts</h1>\n                {/* <img src=\"./Reddit.jpeg\" alt=\"red\"></img> */}\n                {/* <h3>Description:{subgreddiits[0].description}</h3> */}\n\n                {/* <button id=\"myButton\" onClick={renderForm}>Create Post</button> */}\n                {/* <div id=\"createPost\" style={{ display: \"none\" }}>\n                    <form onSubmit={handleSubmit} >\n                        <label htmlFor=\"Text Content\">Post Content:</label>\n                        <input type=\"text\" id=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n                        <button type=\"submit\">Submit Post</button>\n                    </form>\n                </div> */}\n                <button onClick={DisplaySavedPosts}>Display Posts</button>\n                <div id=\"posts\">\n\n                </div>\n            </div>\n\n        </>\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}